name: Pull Request

on:
  pull_request:
    branches:
      - daily
      - beta

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
          persist-credentials: false

      - name: Get npm cache directory path
        id: npm-cache-dir-path
        run: echo "::set-output name=dir::~/.npm"

      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.npm-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install modules
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
        run: npm ci

  lint:
    runs-on: ubuntu-latest
    needs: [install]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
          persist-credentials: false

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Lint code
        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: [install]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
          persist-credentials: false

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        run: npm run build

  test:
    runs-on: ubuntu-latest
    # needs: [install]
    matrix:
      mongo-version: [4.2]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
          persist-credentials: false

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      # - uses: actions/cache@v2
      #   with:
      #     path: '**/node_modules'
      #     key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install deps
        run: npm install

      - name: Build extension for tests
        run: npm run build:dev

      - name: Test spec
        run: npm test spec

      - name: Start MongoDB v${{ matrix.mongodb-version }}
        uses: supercharge/mongodb-github-action@1.2.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Start api service
        working-directory: yttrex-backend/backend
        run: docker-compose up -d api

      - name: Log what's going on in docker
        working-directory: yttrex-backend/backend 
        run: docker-compose logs api

      

      - name: Test Code
        uses: mujo-code/puppeteer-headful@v2
        env:
          CI: 'true'
        with:
          args: npm test e2e -- --watchAll=false

      - name: Stop api service
        working-directory: yttrex-backend/backend
        run: docker-compose down
